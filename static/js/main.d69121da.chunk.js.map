{"version":3,"sources":["components/Filter/Filter.module.css","components/Section/Section.module.css","components/Container/Container.module.css","components/ContactForm/ContactForm.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","components/Container/Container.js","components/Section/Section.js","App.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactsList/ContactsList.module.css"],"names":["module","exports","INIITAL_STATE","name","number","ContactForm","state","handleInputForm","e","currentTarget","value","setState","handleFormSubmit","preventDefault","onAdd","props","validateForm","id","uuid","resetForm","onCheckContact","alert","this","className","s","form","onSubmit","input","type","pattern","title","required","placeholder","onChange","button","Component","ContactsList","contacts","onRemove","length","list","map","onClick","protoTypes","PropTypes","arrayOf","shape","string","isRequired","func","Filter","filter","label","target","Container","children","container","Section","section","App","handelAddContact","newContact","handelCheckContact","existContact","some","contact","handleDeleteContact","contactId","handleFilterChange","getVisibleContacts","normalizedFilter","toLowerCase","includes","localStorage","getItem","parsedContact","JSON","parse","prevProps","prevState","nextContact","setItem","stringify","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d69121da.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3DcZT\",\"filter\":\"Filter_filter__1E5tH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__Ap5Zy\",\"title\":\"Section_title__2S6oE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cotainer\":\"Container_cotainer__1k7pl\"};","import { Component } from \"react\";\nimport { v4 as uuid } from \"uuid\";\nimport PropTypes from \"prop-types\";\nimport s from \"./ContactForm.module.css\";\n\nconst INIITAL_STATE = {\n  name: \"\",\n  number: \"\",\n};\n\nclass ContactForm extends Component {\n  state = INIITAL_STATE;\n\n  handleInputForm = (e) => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleFormSubmit = (e) => {\n    e.preventDefault();\n\n    const { name, number } = this.state;\n    const { onAdd } = this.props;\n\n    const isValidatedForm = this.validateForm();\n\n    if (!isValidatedForm) return;\n\n    onAdd({ id: uuid(), name, number });\n\n    this.resetForm();\n  };\n\n  validateForm = () => {\n    const { name, number } = this.state;\n    const { onCheckContact } = this.props;\n    if (!name || !number) {\n      alert(\"Some filed is empty\");\n      return false;\n    }\n    return onCheckContact(name);\n  };\n\n  resetForm = () => this.setState(INIITAL_STATE);\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form className={s.form} onSubmit={this.handleFormSubmit}>\n        <label>\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            placeholder=\"Enter name\"\n            value={name}\n            onChange={this.handleInputForm}\n          />\n        </label>\n        <label>\n          <input\n            className={s.input}\n            type=\"tell\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            placeholder=\"Enter phone number\"\n            value={number}\n            onChange={this.handleInputForm}\n          />\n        </label>\n\n        <button className={s.button} type=\"submit\">\n          {\" \"}\n          Add Contact{\" \"}\n        </button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onCheckContact: PropTypes.func.isRequired,\n  onAdd: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import PropTypes from \"prop-types\";\nimport s from \"./ContactsList.module.css\";\n\nconst ContactsList = ({ contacts, onRemove }) => {\n  if (contacts.length === 0) return null;\n  return (\n    <div className={s.contacts}>\n      <ul className={s.list}>\n        {contacts.map(({ id, name, number }) => (\n          <li key={id}>\n            <p>\n              {name}: {number}\n            </p>\n            <button\n              className={s.button}\n              type=\"button\"\n              onClick={() => onRemove(id)}\n            >\n              delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nContactsList.protoTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  onRemove: PropTypes.func.isRequired,\n};\n\nexport default ContactsList;\n","import PropTypes from \"prop-types\";\nimport s from \"./Filter.module.css\";\n\nconst Filter = ({ filter, onChange }) => {\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input\n        className={s.input}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={({ target }) => onChange(target.value)}\n        placeholder=\"Enter name for Search\"\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import propTypes from \"prop-types\";\nimport s from \"./Container.module.css\";\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nContainer.propTypes = {\n  children: propTypes.node.isRequired,\n};\n\nexport default Container;\n","import PropTypes from \"prop-types\";\n\nimport s from \"./Section.module.css\";\n\nfunction Section({ title, children }) {\n  return (\n    <section className={s.section}>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import { Component } from \"react\";\n\nimport ContactForm from \"./components/ContactForm\";\n\nimport ContactsList from \"./components/ContactsList\";\n\nimport Filter from \"./components/Filter\";\nimport Container from \"./components/Container\";\nimport Section from \"./components/Section\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    // console.log('App componentDidMount');\n\n    const contacts = localStorage.getItem('contacts');\n    const parsedContact = JSON.parse(contacts);\n\n    if (parsedContact) {\n      this.setState({ contacts: parsedContact });\n    }\n\n    // console.log(parsedContact);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // console.log('App componentDidUpdate');\n\n    const nextContact = this.state.contacts;\n    const prevContact = prevState.contacts;\n\n    if (nextContact !== prevContact) {\n      // console.log('Updated contacts');\n\n      localStorage.setItem('contacts', JSON.stringify(nextContact));\n    }\n\n    // console.log(this.state);\n  }\n\n\n\n  handelAddContact = (newContact) =>\n    this.setState(({ contacts }) => ({\n      contacts: [...contacts, newContact],\n    }));\n\n  handelCheckContact = (name) => {\n    const { contacts } = this.state;\n\n    const existContact = contacts.some((contact) => contact.name === name);\n\n    existContact && alert(`${name} is already in contacts`);\n\n    return !existContact;\n  };\n\n  handleDeleteContact = (contactId) =>\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter((contact) => contact.id !== contactId),\n    }));\n\n  handleFilterChange = (filter) => this.setState({ filter });\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  render() {\n    const { filter, contacts } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n    return (\n      <Container>\n        <Section title=\"Phonebook\">\n          <ContactForm\n            onAdd={this.handelAddContact}\n            onCheckContact={this.handelCheckContact}\n          />\n        </Section>\n        <Section title=\"Contacts\">\n          {contacts.length > 1 && (\n            <Filter filter={filter} onChange={this.handleFilterChange} />\n          )}\n          {contacts.length > 0 ? (\n            <ContactsList\n              contacts={visibleContacts}\n              onRemove={this.handleDeleteContact}\n            />\n          ) : (\n            <p>Your phonebook is empty. Please add contact</p>\n          )}\n        </Section>\n      </Container>\n    );\n  }\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./index.css\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactForm_button__1MLZK\",\"form\":\"ContactForm_form__1fuOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__2RiYd\",\"contacts\":\"ContactsList_contacts__1CdsV\",\"button\":\"ContactsList_button__2RjNg\"};"],"sourceRoot":""}